/**
 * Copyright (C) 2014 Esup Portail http://www.esup-portail.org
 * Copyright (C) 2014 RECIA http://www.recia.fr
 * @Author (C) 2012 Julien Gribonvald <julien.gribonvald@recia.fr>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 				http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.esupportail.publisher.domain.evaluators;

import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NoArgsConstructor;
import lombok.ToString;
import org.esupportail.publisher.domain.AbstractAutoGeneratedIdEntity;
import org.esupportail.publisher.domain.IEntity;

import javax.persistence.*;
import java.io.Serializable;

@Data
@NoArgsConstructor
@EqualsAndHashCode(callSuper = true)
@ToString(callSuper = true)
@JsonTypeInfo(use = JsonTypeInfo.Id.NAME, include = JsonTypeInfo.As.PROPERTY, property = "class", visible = true)
@JsonSubTypes({
    @JsonSubTypes.Type(value = OperatorEvaluator.class, name = "OPERATOR"),
    @JsonSubTypes.Type(value = AuthenticatedUserEvaluator.class, name = "AUTHENTICATED"),
    @JsonSubTypes.Type(value = UserAttributesEvaluator.class, name = "USERATTRIBUTES"),
    @JsonSubTypes.Type(value = UserMultivaluedAttributesEvaluator.class, name = "USERMULTIVALUEDATTRIBUTES"),
    @JsonSubTypes.Type(value = UserGroupEvaluator.class, name = "USERGROUP")
})
@Entity
@Table(name = "T_EVALUATOR")
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(name = "evaluatortype", discriminatorType = DiscriminatorType.STRING, length = 50)
public abstract class AbstractEvaluator extends AbstractAutoGeneratedIdEntity implements IEntity<Long>, IEvaluator,
		Serializable {

	// @OneToOne(mappedBy = "evaluator", fetch = FetchType.LAZY)
	// @JoinColumn(name = "permission_id")
	// @Cascade({ org.hibernate.annotations.CascadeType.SAVE_UPDATE })
	// private AbstractPermission permission;

}
