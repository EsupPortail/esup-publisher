/**
 * Copyright (C) 2014 Esup Portail http://www.esup-portail.org
 * @Author (C) 2012 Julien Gribonvald <julien.gribonvald@recia.fr>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *                 http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.esupportail.publisher.domain;

import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import lombok.*;
import org.esupportail.publisher.domain.enums.FilterType;
import org.esupportail.publisher.domain.util.CustomEnumSerializer;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;
import java.io.Serializable;

/**
 * Filter : define a REGEXP to apply a filter on String list results depending
 * on kind search.
 *
 * @author GIP RECIA - Julien Gribonvald 14 Juin 2014
 */
@Data
@ToString(callSuper = true)
@NoArgsConstructor
@EqualsAndHashCode(callSuper = false, of = { "type", "organization" })
@RequiredArgsConstructor
@Entity
@Table(name = "T_FILTER", uniqueConstraints = @UniqueConstraint(columnNames = {
		"type", "entity_id" }))
@Cache(usage = CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class Filter extends AbstractAutoGeneratedIdEntity implements Serializable {

	/** Serial ID. */
	private static final long serialVersionUID = 5585179496322436208L;

	/** This field corresponds to the database column value. */
	@NotNull
	@NonNull
	@Size(min = 3, max = 2048)
	@Column(nullable = false, length = 2048)
	private String pattern;

    private String description;

	/** This field corresponds to the database column type. */
	@NotNull
	@NonNull
	@Enumerated(EnumType.STRING)
	@Column(nullable = false, length = 15)
    @JsonSerialize(using = CustomEnumSerializer.class)
	private FilterType type;

	/** This field corresponds to the database column entity_id. */

	@NonNull
	@ManyToOne
	@JoinColumn(name = "entity_id", nullable = false)
	private Organization organization;

}
